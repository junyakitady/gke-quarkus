apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    iam.gke.io/gcp-service-account: spanner-client@noogler-2.iam.gserviceaccount.com
  name: k8s-spanner
#gcloud iam service-accounts add-iam-policy-binding spanner-client@noogler-2.iam.gserviceaccount.com --role roles/iam.workloadIdentityUser --member "serviceAccount:noogler-2.svc.id.goog[default/k8s-spanner]"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quarkus-front-deploy
  labels:
    app: quarkus-front
spec:
  replicas: 2
  selector:
    matchLabels:
      app: quarkus-front
  template:
    metadata:
      labels:
        app: quarkus-front
    spec:
      serviceAccountName: k8s-spanner
      containers:
      - name: quarkus-front-container
        image: asia-northeast1-docker.pkg.dev/noogler-2/app/gke-quarkus:latest
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: PROJECT_ID
          value: noogler-2
        startupProbe:
          httpGet:
            path: /item
            port: 8080
          failureThreshold: 15
          periodSeconds: 20
        livenessProbe:
          httpGet:
            path: /hostinfo
            port: 8080
        readinessProbe:
          httpGet:
            path: /item
            port: 8080
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quarkus-back-deploy
  labels:
    app: quarkus-back
spec:
  replicas: 2
  selector:
    matchLabels:
      app: quarkus-back
  template:
    metadata:
      labels:
        app: quarkus-back
    spec:
      serviceAccountName: k8s-spanner
      containers:
      - name: quarkus-back-container
        image: asia-northeast1-docker.pkg.dev/noogler-2/app/gke-quarkus:latest
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: PROJECT_ID
          value: noogler-2
        startupProbe:
          httpGet:
            path: /item
            port: 8080
          failureThreshold: 15
          periodSeconds: 20
        livenessProbe:
          httpGet:
            path: /hostinfo
            port: 8080
        readinessProbe:
          httpGet:
            path: /item
            port: 8080
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
---
apiVersion: v1
kind: Service
metadata:
  name: quarkus-front-service
spec:
  type: LoadBalancer
  selector:
    app: quarkus-front
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: quarkus-back-service
spec:
  type: LoadBalancer
  selector:
    app: quarkus-back
  ports:
  - name: p1
    protocol: TCP
    port: 80
    targetPort: 8080
  - name: p2
    protocol: TCP
    port: 8080
    targetPort: 8080
